body{
background-color:rgba(120,110,0,0.8);
font-size: 20px;
text-align: left;

/*background-image: linear-gradient(-120deg,red,green,cyan);
background:repeating-linear-gradient(to top right, red, blue);*/
background:repeating-linear-gradient(to top right,gray, blue 2px);
/*background:radial-gradient(red,cyan,blue);*/

}
nav{
	border-spacing: 10px;
	text-align: center;
	background-color:rgba(120,20,128,0.4);
	height:40px;
	overflow-wrap:break-word;/* this property caries 2 type normal and break word as the name suggest it braks the word if it goes out of the container*/ 

}
p:active{ background-color: red; }
a:active{

}
a:visited{}
a:target{

}


#video{
	left:50px;
	width:60%;
	border:2px solid black;
}
/* we use this media query to set the width of video acording to the screen if we dont select the screen it will atomatically take all as parameter
          we have set 2 media query on them.
          so there are basically 2 approaches that we will look at while designing the web page 1. dwsktop first 2. mobile first 
          for mobile first just think according to the mobile perspective and we will be just do it similarly just replace the max-width with the min-width

          */
@media screen and (max-width: 900px){
	#video{ width:80%; }

}

@media screen and (max-width: 600px){
	#video{ width:100%; }
	
}


video{
	margin:5px;
	padding:5px;
	align-self: center;
	position: sticky;
	/* relative,absolute,fixed,sticky

	  search for them in detail its an important concept to look at while desigining the web page*/

	border:2px solid blue;
	max-height:30%;
	min-width:90%;
	box-sizing: border-box;

	
}
div{

overflow:auto;
/* visible,scroll,hidden  it is used to what happen to content  */ 

}
#container{
	height:75vh;
	width: 75vw;
	background-color:blue;
	display: flex;
	flex-direction:row;/*columns,row,row-reverse */ 
	flex-wrap:wrap;/* this property is used to show the 1.nowrap  will make all container in 1 row,2.wrap,3.wrap-reverse */
     justify-content: space-between;/* flex-start, flex-end, space-around,space-between*/


/*now this point should be very clear that justify content work on the ----->  direction 
that is direction of the main axis(in case of row its ---->) and the align-item works in cross direction use right hand rule and it will give the direction
align-items have 1.flex-start 2.flex-end 3.stretch(default)4.baseline(align across the same baseline)5.center
 */
align-items: center; 
}


#container div{
	height: 100px;
	width:300px;
}
#div1{
	background-color: cyan;
	order:1;/*by default order is 0 for all but we can set it to any order -ve or positive*/
	flex-grow: 2;
	flex-shrink: 3;
}
#div2{
	background-color:green;
	order:3;
	flex-grow: 1; /* this will allow to grow the box in ratio like 2 boxes grow=1 and grow=2 so box 1 will be 1/3 and box2=2/3 */
	flex-shrink: 1;
}
#div3{
	background-color:red;
	order:2;
	flex-grow: 1;
	flex-shrink: 1;

}
#div4{
	background-color:orange;
	order:0;
	flex-grow: 3;
	flex-shrink: 1;
}
#div5{
	background-color:white;
	order:0;
	flex-grow: 1;
	flex-shrink: 1;
}


#lightbox{
	height:0;
	width: 0;
	position:fixed;
	top: 0;
	left: 0;
	overflow: hidden;
	transition:all 2s ease-in-out;
}
#lightb1{

    margin-top: 20px;
	background-color: yellow;}

#lightbox:target{
	height:30%;
	width:30%;
	top:25%;
	left:25%;
	background-color:red;
}

.transition-box{

height:200px;
width:160px;
background-color: red;
position:absolute;
left:30px;
/*transform:rotate(90deg);
transform:scale(1.5,0.4);
transform: translate(10px,100px);*/
transition: all 1s ease-in-out 0.5s; 
transition: 1s steps(10, end); /* this to make the animation in steps so more the steps more smooth the animation looks*/



}
.transition-box:hover{transform: scale(1.5) translate(150px);
background-color: orange;}


@keyframes changeshape{

	from{
		border-radius: 0%;
		

	}
	25%{

		border-radius:12.5%;
		
	}
	50%{
		border-radius: 25%;
        
	}
	to{
		border-radius: 50%
	
	}
}

@keyframes bounce{

	from{
		
		transform:translateY(0px);

	}
	25%{

	
		transform:translateY(30px);
	}
	50%{
	
        transform:translateY(10px);
	}
	to{

		transform:translateY(0px);
	}
}



@keyframes reducesize{
	from{
		height:200px;
		width: 200px;
	}
	to{height: 100px;
	   width: 100px;}
}

@keyframes rotate{
	from{transform:rotate(0deg);

}
to{ transform: rotate(360deg);

}}


.blinking-box{
height:200px;
width:160px;
background-color:aquamarine;
position:absolute;
left:240px;


animation:changeshape 1s ease-in-out 12 alternate;

}

#green-wheel{

		height:200px;
width:160px;
background-color:violet;
position:absolute;
left:440px;
animation-name:reducesize,bounce,changeshape,rotate;
animation-delay:ease-in-out,ease-in-out,ease-in-out,ease-in-out;
animation-duration: 0.8s,2.8s,0.8s,0.8s;
animation-iteration-count:infinite,6,infinite,infinite;

animation-direction:alternate,alternate,alternate,alternate;

}






}

